<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.LiuMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.pojo.Liu">
    <id column="liuNumber" jdbcType="VARCHAR" property="liunumber" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="liuDoller" jdbcType="DOUBLE" property="liudoller" />
    <result column="liuState" jdbcType="INTEGER" property="liustate" />
    <result column="startTime" jdbcType="TIMESTAMP" property="starttime" />
    <result column="shutDownTime" jdbcType="TIMESTAMP" property="shutdowntime" />
    <result column="liuPayNumber" jdbcType="VARCHAR" property="liupaynumber" />
    <result column="liuChannel" jdbcType="VARCHAR" property="liuchannel" />
    <result column="orderNumber" jdbcType="VARCHAR" property="ordernumber" />
    <result column="consumerName" jdbcType="VARCHAR" property="consumername" />
    <result column="consumerPhoto" jdbcType="VARCHAR" property="consumerphoto" />
    <result column="copyConsumerPhoto" jdbcType="VARCHAR" property="copyconsumerphoto" />
    <result column="redundant" jdbcType="VARCHAR" property="redundant" />
    <result column="redundant1" jdbcType="VARCHAR" property="redundant1" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="liuDescribe" jdbcType="VARCHAR" property="liudescribe" />
  </resultMap>
  <sql id="Base_Column_List">
    liuNumber, location, liuDoller, liuState, startTime, shutDownTime, liuPayNumber, 
    liuChannel, orderNumber, consumerName, consumerPhoto, copyConsumerPhoto, redundant, 
    redundant1, address, liuDescribe
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `liu`
    where liuNumber = #{liunumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from `liu`
    where liuNumber = #{liunumber,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.pojo.Liu">
    insert into `liu` (liuNumber, location, liuDoller,
      liuState, startTime, shutDownTime, 
      liuPayNumber, liuChannel, orderNumber, 
      consumerName, consumerPhoto, copyConsumerPhoto, 
      redundant, redundant1, address, 
      liuDescribe)
    values (#{liunumber,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{liudoller,jdbcType=DOUBLE}, 
      #{liustate,jdbcType=INTEGER}, #{starttime,jdbcType=TIMESTAMP}, #{shutdowntime,jdbcType=TIMESTAMP}, 
      #{liupaynumber,jdbcType=VARCHAR}, #{liuchannel,jdbcType=VARCHAR}, #{ordernumber,jdbcType=VARCHAR}, 
      #{consumername,jdbcType=VARCHAR}, #{consumerphoto,jdbcType=VARCHAR}, #{copyconsumerphoto,jdbcType=VARCHAR}, 
      #{redundant,jdbcType=VARCHAR}, #{redundant1,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{liudescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.pojo.Liu">
    insert into `liu`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="liunumber != null">
        liuNumber,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="liudoller != null">
        liuDoller,
      </if>
      <if test="liustate != null">
        liuState,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="shutdowntime != null">
        shutDownTime,
      </if>
      <if test="liupaynumber != null">
        liuPayNumber,
      </if>
      <if test="liuchannel != null">
        liuChannel,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
      <if test="consumername != null">
        consumerName,
      </if>
      <if test="consumerphoto != null">
        consumerPhoto,
      </if>
      <if test="copyconsumerphoto != null">
        copyConsumerPhoto,
      </if>
      <if test="redundant != null">
        redundant,
      </if>
      <if test="redundant1 != null">
        redundant1,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="liudescribe != null">
        liuDescribe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="liunumber != null">
        #{liunumber,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="liudoller != null">
        #{liudoller,jdbcType=DOUBLE},
      </if>
      <if test="liustate != null">
        #{liustate,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="shutdowntime != null">
        #{shutdowntime,jdbcType=TIMESTAMP},
      </if>
      <if test="liupaynumber != null">
        #{liupaynumber,jdbcType=VARCHAR},
      </if>
      <if test="liuchannel != null">
        #{liuchannel,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumername != null">
        #{consumername,jdbcType=VARCHAR},
      </if>
      <if test="consumerphoto != null">
        #{consumerphoto,jdbcType=VARCHAR},
      </if>
      <if test="copyconsumerphoto != null">
        #{copyconsumerphoto,jdbcType=VARCHAR},
      </if>
      <if test="redundant != null">
        #{redundant,jdbcType=VARCHAR},
      </if>
      <if test="redundant1 != null">
        #{redundant1,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="liudescribe != null">
        #{liudescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.pojo.Liu">
    update `liu`
    <set>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="liudoller != null">
        liuDoller = #{liudoller,jdbcType=DOUBLE},
      </if>
      <if test="liustate != null">
        liuState = #{liustate,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="shutdowntime != null">
        shutDownTime = #{shutdowntime,jdbcType=TIMESTAMP},
      </if>
      <if test="liupaynumber != null">
        liuPayNumber = #{liupaynumber,jdbcType=VARCHAR},
      </if>
      <if test="liuchannel != null">
        liuChannel = #{liuchannel,jdbcType=VARCHAR},
      </if>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
      <if test="consumername != null">
        consumerName = #{consumername,jdbcType=VARCHAR},
      </if>
      <if test="consumerphoto != null">
        consumerPhoto = #{consumerphoto,jdbcType=VARCHAR},
      </if>
      <if test="copyconsumerphoto != null">
        copyConsumerPhoto = #{copyconsumerphoto,jdbcType=VARCHAR},
      </if>
      <if test="redundant != null">
        redundant = #{redundant,jdbcType=VARCHAR},
      </if>
      <if test="redundant1 != null">
        redundant1 = #{redundant1,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="liudescribe != null">
        liuDescribe = #{liudescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where liuNumber = #{liunumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.pojo.Liu">
    update `liu`
    set location = #{location,jdbcType=VARCHAR},
      liuDoller = #{liudoller,jdbcType=DOUBLE},
      liuState = #{liustate,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIMESTAMP},
      shutDownTime = #{shutdowntime,jdbcType=TIMESTAMP},
      liuPayNumber = #{liupaynumber,jdbcType=VARCHAR},
      liuChannel = #{liuchannel,jdbcType=VARCHAR},
      orderNumber = #{ordernumber,jdbcType=VARCHAR},
      consumerName = #{consumername,jdbcType=VARCHAR},
      consumerPhoto = #{consumerphoto,jdbcType=VARCHAR},
      copyConsumerPhoto = #{copyconsumerphoto,jdbcType=VARCHAR},
      redundant = #{redundant,jdbcType=VARCHAR},
      redundant1 = #{redundant1,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      liuDescribe = #{liudescribe,jdbcType=VARCHAR}
    where liuNumber = #{liunumber,jdbcType=VARCHAR}
  </update>
</mapper>